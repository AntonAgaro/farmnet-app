{"version":3,"sources":["utils/fetchData/fetchData.js","Components/Pagination/PaginationUtils/range.js","Components/Pagination/Pagination.js","Components/ChecksTable/ChecksTable.js","Components/Spinner/Spinner.js","Components/CheckInfoTable/CheckInfoTable.js","Components/Modal/Modal.js","App/App.js","index.js"],"names":["fetchData","url","a","fetch","data","json","range","from","to","step","i","push","Pagination","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","useState","currentPage","setCurrentPage","totalPages","Math","ceil","leftPage","rightPage","gotoPage","page","max","min","paginationData","useEffect","handleClick","event","preventDefault","handleMoveLeft","handleMoveRight","pages","totalNumbers","startPage","endPage","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","fetchPageNumbers","className","map","index","onClick","ChecksTable","checks","item","date","Date","createDate","findCheckInfo","checkId","checkNumber","toLocaleString","branch","operation_type","posCount","sumQuantity","sumRoznWNDS","Spinner","CheckInfoTable","checkInfo","srokG","slice","search","drug","form","fabr","quantity","nds","Modal","isActive","setModalActive","currentCheckId","modalClasses","modalContentClasses","join","e","stopPropagation","App","setChecks","checksInfo","setChecksInfo","currentsCheks","setCurrentChecks","setCheckNumber","isModalActive","setCurrentCheckId","currentCheckInfo","setCurrentCheckInfo","process","then","res","totalChecksLength","id","filter","offset","currentsChecks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8df3a756.chunk.js","sourcesContent":["const fetchData = async (url) => {\n  const data =  await fetch(url);\n  const json = await data.json();\n\n  return json;\n}\n\nexport default fetchData;","const range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nexport default range;","import React, { useEffect, useState } from 'react';\nimport range from './PaginationUtils/range';\nimport './Pagination.scss';\n\nconst Pagination = props => {\n  const {totalRecords = null, pageLimit = 30, pageNeighbours = 0, onPageChanged} = props;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = Math.ceil(totalRecords / pageLimit);\n  const leftPage = 'left';\n  const rightPage = 'right';\n\n  const fetchPageNumbers = () => {\n    const totalNumbers = (pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n      let pages = range(startPage, endPage);\n\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [leftPage, ...extraPages, ...pages];\n          break;\n        }\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, rightPage];\n          break;\n        }\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [leftPage, ...pages, rightPage];\n          break;\n        }\n      }\n      return [1, ...pages, totalPages];\n    }\n    return range(1, totalPages);\n  }\n\n  const gotoPage = page => {\n    // const {onPageChanged = f => f} = props;\n    const currentPage = Math.max(0, Math.min(page, totalPages));\n    const paginationData = {\n      currentPage,\n      totalPages,\n      pageLimit,\n      totalRecords\n    };\n\n    setCurrentPage(currentPage);\n    onPageChanged(paginationData);\n  }\n\n  useEffect(() => {\n    gotoPage(1)\n  }, [totalPages])\n\n  const handleClick = page => event => {\n    event.preventDefault();\n    gotoPage(page);\n  } \n\n  const handleMoveLeft = event => {\n    event.preventDefault();\n    gotoPage(currentPage - (pageNeighbours * 2) - 1);\n  }\n\n  const handleMoveRight = event => {\n    event.preventDefault();\n    gotoPage(currentPage + (pageNeighbours * 2) + 1);\n  }\n\n  if (!totalRecords || totalPages === 1) return null;\n\n  const pages = fetchPageNumbers();\n\n  return (\n    <>\n      <div className=\"pagination\">\n        {pages.map((page, index) => {\n          if (page === leftPage) return (\n            <button className=\"page-item\" key={index} onClick={handleMoveLeft}>Prev</button>\n          );\n          if (page === rightPage) return (\n            <button className=\"page-item\" key={index} onClick={handleMoveRight}>Next</button>\n          );\n          return (\n            <button \n              className={`page-item${currentPage === page ? ' page-item--active' : ''}`}\n              key={index}\n              onClick={handleClick(page)}\n            >  \n            {page}\n            </button>\n          );\n        })}\n      </div>\n    </>\n  )\n\n\n}\n\nexport default Pagination;","import React from 'react';\nimport './ChecksTable.scss';\n\nconst ChecksTable = props => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n            <th>№</th>\n            <th>id</th>\n            <th>Дата продажи</th>\n            <th>Филиал</th>\n            <th>Тип операции</th>\n            <th>Позиций</th>\n            <th>Продано</th>\n            <th>Сумма</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.checks.map((item, index) => {\n          const date = new Date(item.createDate);\n          return (\n            <tr key={index} onClick={() => props.findCheckInfo(item.checkId)}>\n              <td>{props.checkNumber + index + 1}</td>\n              <td>{item.checkId}</td>\n              <td>{date.toLocaleString()}</td>\n              <td>{item.branch}</td>\n              <td>{item.operation_type}</td>\n              <td>{item.posCount}</td>\n              <td>{item.sumQuantity}</td>\n              <td>{item.sumRoznWNDS}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default ChecksTable;","import React from 'react';\n\nimport './Spinner.scss';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <div className=\"loadingio-spinner-spin-52fuiut5mue\"><div className=\"ldio-pla356f8p3\">\n    <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\n    </div></div>\n    </div>\n  )\n}\n\nexport default Spinner;","import React from 'react';\nimport './CheckInfoTable.scss';\n\nconst CheckInfoTable = props => {\n  return (\n    <table className=\"table-info\">\n      <thead>\n        <tr>\n          <th>№</th>\n          <th>Название товара</th>\n          <th>Форма выпуска</th>\n          <th>Производитель</th>\n          <th>Продано товара</th>\n          <th>Сумма продажи</th>\n          <th>Ставка НДС</th>\n          <th>Срок годности</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.checkInfo && props.checkInfo.map((item, index) => {\n          const date = item.srokG.slice(0, item.srokG.search(/T/));\n          return (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{item.drug}</td>\n              <td>{item.form}</td>\n              <td>{item.fabr}</td>\n              <td>{item.quantity}</td>\n              <td>{item.sumRoznWNDS}</td>\n              <td>{item.nds}</td>\n              <td>{date}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default CheckInfoTable;","import React from 'react';\nimport CheckInfoTable from '../CheckInfoTable/CheckInfoTable';\nimport './Modal.scss';\n\nconst Modal = props => {\n  const {isActive, setModalActive, currentCheckId, checkInfo} = props;\n  const modalClasses = ['modal'];\n  const modalContentClasses = ['modal-content'];\n  if (isActive) {\n    modalClasses.push('modal--active');\n    modalContentClasses.push('modal-content--active');\n  }\n\n  return (\n    <div className={modalClasses.join(' ')} onClick={() => setModalActive(false)}>\n      <div className={modalContentClasses.join(' ')} onClick={e => e.stopPropagation()}>\n        <h3 className=\"modal-title\">Информация по чеку № {currentCheckId}</h3>\n        <CheckInfoTable checkInfo={checkInfo}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;","import React, { useEffect, useState } from 'react';\nimport fetchData from '../utils/fetchData/fetchData';\nimport Pagination from '../Components/Pagination/Pagination';\nimport ChecksTable from '../Components/ChecksTable/ChecksTable';\n\nimport './App.scss';\nimport Spinner from '../Components/Spinner/Spinner';\nimport Modal from '../Components/Modal/Modal';\n\nconst App = () => {\n  const [checks, setChecks] = useState([]);\n  const [checksInfo, setChecksInfo] = useState([]);\n  const [currentsCheks, setCurrentChecks] = useState([]);\n  const [checkNumber, setCheckNumber] = useState(0);\n  const [isModalActive, setModalActive] = useState(false);\n  const [currentCheckId, setCurrentCheckId] = useState(0);\n  const [currentCheckInfo, setCurrentCheckInfo] = useState([]);\n\n  useEffect(() => {\n    fetchData(process.env.PUBLIC_URL + '/tables/cheksWithId.json')\n      .then(res => setChecks(res));\n    \n    fetchData(process.env.PUBLIC_URL + '/tables/checkInfoWithId.json')\n      .then(res => setChecksInfo(res));\n  }, []);\n\n  const onPageChanged = data => {\n    const {currentPage, pageLimit} = data;\n    const offset = (currentPage - 1) * pageLimit;\n    const currentsChecks = checks.slice(offset, offset + pageLimit);\n\n    setCheckNumber(offset);\n    setCurrentChecks(currentsChecks);\n  }\n\n  const totalChecksLength = checks.length;\n\n  const findCheckInfo = (id) => {\n    const res = checksInfo.filter(item => item.checkId === id);\n    setCurrentCheckId(id);\n    setModalActive(true);\n    setCurrentCheckInfo(res);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Список продаж:</h1>\n      {checks.length && checksInfo.length ? \n        <>\n        <ChecksTable checks={currentsCheks} checkNumber={checkNumber} findCheckInfo={findCheckInfo}/>\n        <Pagination \n        totalRecords={totalChecksLength} \n        pageLimit={20} \n        pageNeighbours={1}\n        onPageChanged={onPageChanged}\n      />\n        </> : <Spinner/>\n      }\n      <Modal \n        isActive={isModalActive} \n        setModalActive={setModalActive}\n        currentCheckId={currentCheckId}\n        checkInfo={currentCheckInfo}  \n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}